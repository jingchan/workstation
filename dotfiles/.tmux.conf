setw -g mode-keys vi
set -g status-keys vi

# Make it use ` as the prefix
unbind C-b
set-option -g prefix `
bind ` send-prefix
bind ` send-keys `

# allow unicode characters.
setw -gq utf8 on

# Start windows and panes at 1 not 0
set -g base-index 1
setw -g pane-base-index 1

# Set history buffer to a higher value (default: 2000)
set-option -g history-limit 100000

# enable 256 colors in tmux
set -g default-terminal "screen-256color"

# Sane scrolling
set -g terminal-overrides 'xterm*:smcup@:rmcup@'

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h'  'select-pane -L'
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j'  'select-pane -D'
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k'  'select-pane -U'
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l'  'select-pane -R'
tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"

bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R
bind-key -T copy-mode-vi 'C-\' select-pane -l

# Pane sizing
# Use the vim resizing keys
# One step is too small, use size 5
bind < resize-pane -L 5
bind > resize-pane -R 5
bind + resize-pane -U 5
bind - resize-pane -D 5

# Pane selecting
# Use vi like move
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# Set status bar
set -g status-bg black
set -g status-fg white
# Update in every 1 minute
set -g status-interval 60

# Status bar - left
set -g status-left ''
#set -g status-left '#[fg=colour128,bold][#h]#[fg=colour200,bold][#S]'
# [machine_name][loas_status][session_name]
#set -g status-left '#[fg=colour128,bold][#h]#(/google/data/rw/users/md/mds/homedir/bin/check_loas_status.sh)#[fg=colour200,bold][#S]'
set -g status-left-length 100
#
# Status bar - right side
# {Pane Title}{Date}
set -g status-right-length 220
#set -g status-right '#[fg=green]#T#[fg=yellow] %A %B %D #[fg=green]: %l:%M %p : #(date -u | awk '{print $4}') :'
set -g status-right '#[fg=#9260a6,bold][#S] #[fg=green]#T #[fg=yellow]%b %d #[fg=green]%l:%M %p'

# Current or active window in status bar
set-window-option -g window-status-current-style bg=#358da1
set-window-option -g window-status-current-format '#[fg=black,bold]#I:<#W>'
set-window-option -g window-status-format '#I:<#W>'

# Auto rename window title to current program
set-window-option -g automatic-rename on

# Toggle mouse mode
bind m set-option mouse\; display-message "Mouse is now #{?mouse,on,off}"
